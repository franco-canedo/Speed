[{"/Users/franco_canedo/Documents/SE study/ReactGame/game/src/App.js":"1","/Users/franco_canedo/Documents/SE study/ReactGame/game/src/reportWebVitals.js":"2","/Users/franco_canedo/Documents/SE study/ReactGame/game/src/Containers/Main.js":"3","/Users/franco_canedo/Documents/SE study/ReactGame/game/src/index.js":"4","/Users/franco_canedo/Documents/SE study/ReactGame/game/src/Containers/Game.js":"5","/Users/franco_canedo/Documents/SE study/ReactGame/game/src/Components/Box.js":"6","/Users/franco_canedo/Documents/SE study/ReactGame/game/src/Components/Timer.js":"7","/Users/franco_canedo/Documents/SE study/ReactGame/game/src/Components/RestartModal.js":"8"},{"size":441,"mtime":1607633000069,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607470716507,"results":"11","hashOfConfig":"10"},{"size":385,"mtime":1607639803189,"results":"12","hashOfConfig":"10"},{"size":609,"mtime":1607652036659,"results":"13","hashOfConfig":"10"},{"size":3432,"mtime":1607665188603,"results":"14","hashOfConfig":"10"},{"size":1355,"mtime":1607653081816,"results":"15","hashOfConfig":"10"},{"size":602,"mtime":1607666111499,"results":"16","hashOfConfig":"10"},{"size":923,"mtime":1607665532272,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"90oz2m",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/franco_canedo/Documents/SE study/ReactGame/game/src/App.js",["42"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport Main from './Containers/Main';\nimport Game from './Containers/Game';\n\n\n\n\nfunction App() {\n\n  const [game, setState] = useState(false);\n\n  const playGame = () => {\n    setState(true);\n  }\n\n\n\n  return (\n    <React.Fragment>\n\n      {\n        game ? <Game/> : <Main playGame={playGame}/>\n      }\n\n    </React.Fragment>\n  )\n}\n\nexport default App;\n",["43","44"],"/Users/franco_canedo/Documents/SE study/ReactGame/game/src/reportWebVitals.js",[],["45","46"],"/Users/franco_canedo/Documents/SE study/ReactGame/game/src/Containers/Main.js",["47"],"import React, {useState} from 'react';\n\n\n\nconst Main = (props) =>  {\n    return (\n        <div className='main'>\n            <h1 className=\"title\">Test your mind</h1>\n            <div className='playButton'>\n            <button className='btn btn-dark btn-lg' onClick={props.playGame}>Play!</button>\n            </div>\n            \n        </div>\n        \n    )\n}\n\nexport default Main;","/Users/franco_canedo/Documents/SE study/ReactGame/game/src/index.js",["48"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Game from './Containers/Game';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["49","50"],"/Users/franco_canedo/Documents/SE study/ReactGame/game/src/Containers/Game.js",["51","52","53","54","55","56","57","58","59"],"import React, { useEffect, useState } from 'react';\n\nimport Box from '../Components/Box';\nimport Timer from '../Components/Timer';\nimport RestartModal from '../Components/RestartModal';\n\n\n\n\n\nconst Game = () => {\n\n    const [boxes, setState] = useState(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']);\n    const [colors, setColor] = useState([\n        '#4753fc',\n        '#fc3549',\n        '#59d467',\n        '#bfb64b',\n    ]);\n\n    const [number, setAnswer] = useState('');\n    const [numberColor, setNumberColor] = useState('');\n    const [colorName, setColorName] = useState('');\n    const [createdBoxes, setCreatedBoxes] = useState([]);\n    const [hasLost, setHasLost] = useState(false);\n    \n\n    useEffect(() => {\n        let i = Math.floor(Math.random() * colors.length);\n        setAnswer(boxes[Math.floor(Math.random() * boxes.length)]);\n        setNumberColor(colors[i]);\n        let color = '';\n        switch (i) {\n            case 0:\n                color = 'blue'\n                break;\n            case 1:\n                color = 'red'\n                break;\n            case 2:\n                color = 'green'\n                break;\n            case 3:\n                color = 'yellow'\n                break;\n        }\n        setColorName(color);\n    }, [])\n\n    const checkAnswer = (number, color) => {\n        console.log(number, color);\n    }\n\n    const createBoxes = (boxes) => {\n        let i = 0;\n        let color = '';\n        console.log(i);\n        shuffle(boxes);\n        return boxes.map(number => {\n            i = Math.floor(Math.random() * colors.length);\n            switch (i) {\n                case 0:\n                    color = 'blue'\n                    break;\n                case 1:\n                    color = 'red'\n                    break;\n                case 2:\n                    color = 'green'\n                    break;\n                case 3:\n                    color = 'yellow'\n                    break;\n            }\n            return <Box number={number} color={colors[i]} colorString={color} checkAnswer={checkAnswer} />\n        })\n    }\n\n    \n\n    const shuffle = (boxes) => {\n        let m = boxes.length, t, i;\n        while (m) {\n            i = Math.floor(Math.random() * m--);\n\n            t = boxes[m];\n            boxes[m] = boxes[i];\n            boxes[i] = t;\n        }\n        return boxes;\n    }\n\n    const arrayLoop = (boxes) => {\n        let i = 0;\n        return boxes.map(number => {\n\n            if (i < 7) {\n                i++;\n                return createBoxes(boxes);\n\n            } else {\n                return;\n            }\n\n        })\n    }\n\n    const restart = () => {\n        setHasLost(true);\n        console.log('restart?')\n    }\n\n\n    return (\n        <div className='game'>\n            <div className='gameHeader'>\n                <div className='headerDivs'>\n                    <h1>Find all the {colorName} {number}'s!</h1>\n                </div>\n                <div className='headerDivs'>\n                    <Timer restart={restart}/>\n                </div>\n                <div className='headerDivs'>\n                    <h1>Score: </h1>\n                </div>\n            </div>\n\n\n            <div className='gameSpace'>\n                {arrayLoop(boxes)}\n            </div>\n            {\n                hasLost ?  <RestartModal hasLost={hasLost}/> : null\n            }\n           \n        </div>\n\n    )\n}\n\nexport default Game;","/Users/franco_canedo/Documents/SE study/ReactGame/game/src/Components/Box.js",["60","61","62","63","64","65"],"import React, { useEffect, useState } from 'react';\nimport { useUID, useUIDSeed } from 'react-uid';\n\nconst Box = (props) => {\n\n    const [className, setClassName] = useState('box');\n    const [clicked, setClicked] = useState(false);\n    const [color, setColor] = useState(props.color);\n    const [number, setNumber] = useState(props.number);\n    const uid = useUID();  \n\n\n    const clickCard = () => {\n        if (className == 'box') {\n            setClassName('boxClicked')\n        } else {\n            setClassName('box');\n        }\n        \n        setClicked(prevState => !prevState.clicked)\n    }\n\n    // const interval = () => {\n    //    let flash =  setInterval(() => {\n    //         if (className == 'box') {\n    //             setClassName('boxInterval')\n    //         } else if (className = 'boxInterval') {\n    //             setClassName('box')\n    //         } else {\n    //             clearInterval(flash)\n    //         }\n    //     },1000)\n    // }\n\n    return (\n        \n        <div \n        id={uid}\n        className={className} \n        style={{ backgroundColor: color }} \n        onClick={() => {\n            clickCard();\n            props.checkAnswer(number, color);\n            }}>\n            <div className='face'>\n                <h1>{number}</h1>\n            </div>\n            \n        </div>\n\n    )\n}\n\nexport default Box;","/Users/franco_canedo/Documents/SE study/ReactGame/game/src/Components/Timer.js",["66"],"/Users/franco_canedo/Documents/SE study/ReactGame/game/src/Components/RestartModal.js",["67","68"],{"ruleId":"69","severity":1,"message":"70","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":12},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"69","severity":1,"message":"79","line":1,"column":16,"nodeType":"71","messageId":"72","endLine":1,"endColumn":24},{"ruleId":"69","severity":1,"message":"80","line":8,"column":8,"nodeType":"71","messageId":"72","endLine":8,"endColumn":12},{"ruleId":"73","replacedBy":"81"},{"ruleId":"75","replacedBy":"82"},{"ruleId":"69","severity":1,"message":"83","line":13,"column":19,"nodeType":"71","messageId":"72","endLine":13,"endColumn":27},{"ruleId":"69","severity":1,"message":"84","line":14,"column":20,"nodeType":"71","messageId":"72","endLine":14,"endColumn":28},{"ruleId":"69","severity":1,"message":"85","line":22,"column":12,"nodeType":"71","messageId":"72","endLine":22,"endColumn":23},{"ruleId":"69","severity":1,"message":"86","line":24,"column":12,"nodeType":"71","messageId":"72","endLine":24,"endColumn":24},{"ruleId":"69","severity":1,"message":"87","line":24,"column":26,"nodeType":"71","messageId":"72","endLine":24,"endColumn":41},{"ruleId":"88","severity":1,"message":"89","line":33,"column":9,"nodeType":"90","messageId":"91","endLine":46,"endColumn":10},{"ruleId":"92","severity":1,"message":"93","line":48,"column":8,"nodeType":"94","endLine":48,"endColumn":10,"suggestions":"95"},{"ruleId":"88","severity":1,"message":"89","line":61,"column":13,"nodeType":"90","messageId":"91","endLine":74,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":102,"column":17,"nodeType":"98","messageId":"99","endLine":102,"endColumn":24},{"ruleId":"69","severity":1,"message":"100","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"101","line":2,"column":18,"nodeType":"71","messageId":"72","endLine":2,"endColumn":28},{"ruleId":"69","severity":1,"message":"102","line":7,"column":12,"nodeType":"71","messageId":"72","endLine":7,"endColumn":19},{"ruleId":"69","severity":1,"message":"84","line":8,"column":19,"nodeType":"71","messageId":"72","endLine":8,"endColumn":27},{"ruleId":"69","severity":1,"message":"103","line":9,"column":20,"nodeType":"71","messageId":"72","endLine":9,"endColumn":29},{"ruleId":"104","severity":1,"message":"105","line":14,"column":23,"nodeType":"106","messageId":"107","endLine":14,"endColumn":25},{"ruleId":"92","severity":1,"message":"108","line":21,"column":8,"nodeType":"94","endLine":21,"endColumn":18,"suggestions":"109"},{"ruleId":"69","severity":1,"message":"110","line":12,"column":11,"nodeType":"71","messageId":"72","endLine":12,"endColumn":21},{"ruleId":"92","severity":1,"message":"111","line":16,"column":8,"nodeType":"94","endLine":16,"endColumn":10,"suggestions":"112"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["113"],"no-negated-in-lhs",["114"],["113"],["114"],"'useState' is defined but never used.","'Game' is defined but never used.",["113"],["114"],"'setState' is assigned a value but never used.","'setColor' is assigned a value but never used.","'numberColor' is assigned a value but never used.","'createdBoxes' is assigned a value but never used.","'setCreatedBoxes' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'boxes' and 'colors'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberColor' needs the current value of 'colors'.","ArrayExpression",["115"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'useEffect' is defined but never used.","'useUIDSeed' is defined but never used.","'clicked' is assigned a value but never used.","'setNumber' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["116"],"'handleShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.hasLost'. Either include it or remove the dependency array. If 'setShow' needs the current value of 'props.hasLost', you can also switch to useReducer instead of useState and read 'props.hasLost' in the reducer.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [boxes, colors]",{"range":"124","text":"125"},"Update the dependencies array to be: [props, timeLeft]",{"range":"126","text":"127"},"Update the dependencies array to be: [props.hasLost]",{"range":"128","text":"129"},[1275,1277],"[boxes, colors]",[507,517],"[props, timeLeft]",[429,431],"[props.hasLost]"]